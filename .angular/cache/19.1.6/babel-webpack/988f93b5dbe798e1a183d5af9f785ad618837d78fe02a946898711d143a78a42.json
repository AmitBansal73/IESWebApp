{"ast":null,"code":"import { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nfunction RegisterComponent_Conditional_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_Conditional_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Valid email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_Conditional_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Mobile doesn't match\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(userService, _router) {\n      this.userService = userService;\n      this._router = _router;\n      this.registerUserData = {};\n    }\n    ngOnInit() {\n      this.reactiveRegisterForm = new FormGroup({\n        name: new FormControl(null, [Validators.required, Validators.minLength(4)]),\n        email: new FormControl(null, [Validators.required, Validators.email]),\n        mobileNumber: new FormControl(null, [Validators.required, Validators.minLength(10)]),\n        dob: new FormControl(null, Validators.required),\n        password: new FormControl(null, []),\n        confPassword: new FormControl(null, [])\n        /*       passwordForm : new FormGroup({\n                password: new FormControl(null, [Validators.required]),\n                confPassword: new FormControl(null, [Validators.required]),\n                }\n                ,{ validators: confirmPasswordValidator }\n              ) */\n      });\n    }\n    RegisterUser() {\n      console.log(this.registerUserData);\n      /*     this.userService.Login(this.registerUserData)\n          .subscribe(user=> {\n            //console.log(JSON.stringify(_college));\n            localStorage.setItem('Token', user.token);\n            localStorage.setItem('user', user);\n            this.userInformation = user\n            this._router.navigate(['./dashboard'])\n          },\n          error => console.log(error)\n          ); */\n    }\n    static {\n      this.ɵfac = function RegisterComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || RegisterComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: RegisterComponent,\n        selectors: [[\"app-register\"]],\n        decls: 39,\n        vars: 10,\n        consts: [[1, \"form\"], [1, \"form-title\"], [1, \"\", 3, \"formGroup\"], [1, \"form-body\"], [1, \"form-row\"], [1, \"form-group\", \"form-element\"], [\"for\", \"name\"], [\"name\", \"name\", \"id\", \"name\", \"placeholder\", \"Write Your Name\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"email\"], [\"name\", \"email\", \"id\", \"email\", \"placeholder\", \"Write Your Email\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"password\"], [\"name\", \"password\", \"id\", \"password\", \"type\", \"password\", \"placeholder\", \"Write Password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"confPassword\"], [\"name\", \"confPassword\", \"id\", \"confPassword\", \"placeholder\", \"Confirm Password\", \"formControlName\", \"confPassword\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"mobileNumber\"], [\"name\", \"mobileNumber\", \"id\", \"MobileNumber\", \"placeholder\", \"xxxx111\", \"formControlName\", \"mobileNumber\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"dob\"], [\"type\", \"date\", \"name\", \"dob\", \"id\", \"dob\", \"min\", \"2000-01-01\", \"max\", \"2006-12-31\", \"formControlName\", \"dob\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"button-row\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n        template: function RegisterComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\");\n            i0.ɵɵtext(3, \"Register Yourself\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"form\", 2)(5, \"fieldset\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"label\", 6);\n            i0.ɵɵtext(9, \"Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"input\", 7);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_10_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.registerUserData.name, $event) || (ctx.registerUserData.name = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(11, RegisterComponent_Conditional_11_Template, 2, 0, \"small\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 8);\n            i0.ɵɵtext(14, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"input\", 9);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_15_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.registerUserData.email, $event) || (ctx.registerUserData.email = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(16, RegisterComponent_Conditional_16_Template, 2, 0, \"small\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(17, \"div\", 4)(18, \"div\", 5)(19, \"label\", 10);\n            i0.ɵɵtext(20, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(21, \"input\", 11);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_21_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.registerUserData.password, $event) || (ctx.registerUserData.password = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(22, \"div\", 5)(23, \"label\", 12);\n            i0.ɵɵtext(24, \"Confirm Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(25, \"input\", 13);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_25_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.registerUserData.confPassword, $event) || (ctx.registerUserData.confPassword = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(26, \"div\", 4)(27, \"div\", 5)(28, \"label\", 14);\n            i0.ɵɵtext(29, \"MobileNumber \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(30, \"input\", 15);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_30_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.registerUserData.mobileNumber, $event) || (ctx.registerUserData.mobileNumber = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(31, RegisterComponent_Conditional_31_Template, 2, 0, \"small\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(32, \"div\", 5)(33, \"label\", 16);\n            i0.ɵɵtext(34, \"Date Of Birth \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(35, \"input\", 17);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_35_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.registerUserData.dob, $event) || (ctx.registerUserData.dob = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(36, \"div\", 18)(37, \"button\", 19);\n            i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_37_listener() {\n              return ctx.RegisterUser();\n            });\n            i0.ɵɵtext(38, \"Register\");\n            i0.ɵɵelementEnd()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"formGroup\", ctx.reactiveRegisterForm);\n            i0.ɵɵadvance(6);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.registerUserData.name);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.reactiveRegisterForm.get(\"name\").touched && ctx.reactiveRegisterForm.get(\"name\").invalid ? 11 : -1);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.registerUserData.email);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.reactiveRegisterForm.get(\"email\").touched && ctx.reactiveRegisterForm.get(\"email\").invalid ? 16 : -1);\n            i0.ɵɵadvance(5);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.registerUserData.password);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.registerUserData.confPassword);\n            i0.ɵɵadvance(5);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.registerUserData.mobileNumber);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.reactiveRegisterForm.get(\"mobileNumber\").touched && ctx.reactiveRegisterForm.get(\"mobileNumber\").invalid ? 31 : -1);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.registerUserData.dob);\n          }\n        },\n        dependencies: [ReactiveFormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n        encapsulation: 2\n      });\n    }\n  }\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}