{"ast":null,"code":"//import {QUESTIONS} from '../../data/mock-questions';\n//import { KatexOptions } from 'ng-katex';\nimport { ActivatedRoute, RouterLink } from '@angular/router';\nimport { PaperService } from '../../../services/paper.service';\nimport { QuestionService } from '../../../services/question.service';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../services/paper.service\";\nimport * as i3 from \"../../../services/question.service\";\nfunction QuestionListComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"h5\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\"\", ctx_r0.paper.SubjectName, \", \", ctx_r0.paper.Year, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r0.paper.CollegeName, \", \", ctx_r0.paper.UniversityName, \"\");\n  }\n}\nfunction QuestionListComponent_For_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"h2\", 6)(3, \"div\", 7)(4, \"div\", 8);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 9)(7, \"span\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 10);\n    i0.ɵɵtext(10, \" Show Answer \");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(11, \"div\", 11)(12, \"div\", 12);\n    i0.ɵɵelement(13, \"ng-katex-paragraph\", 13);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const question_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵattributeInterpolate1(\"id\", \"heading\", question_r2.id, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" Question: \", ctx_r0.i + 1, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(question_r2.Question);\n    i0.ɵɵadvance();\n    i0.ɵɵattributeInterpolate1(\"data-target\", \"#collapse\", question_r2.QuesID, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵattributeInterpolate1(\"id\", \"collapse\", question_r2.QuesID, \"\");\n    i0.ɵɵattributeInterpolate1(\"aria-labelledby\", \"heading\", question_r2.QuesID, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"paragraph\", question_r2.Solution);\n  }\n}\nexport let QuestionListComponent = /*#__PURE__*/(() => {\n  class QuestionListComponent {\n    /* options: KatexOptions = {\n      displayMode: true,\n      \n    }; */\n    constructor(route, paperService, questionService) {\n      this.route = route;\n      this.paperService = paperService;\n      this.questionService = questionService;\n      this.questions = [{\n        QuestionID: 0,\n        Question: '$sum_{i=1}^n(x_i^2 - \\\\overline{x}^2)$',\n        Solution: '$sum_{i=1}^n(x_i^2 - \\\\overline{x}^2)$',\n        DifficultyLevel: 1,\n        SubjectID: 0,\n        TopicID: 0\n      }];\n    }\n    ngOnInit() {\n      this.PaperID = +this.route.snapshot.paramMap.get('PaperID');\n      this.GetPaperDetails(this.PaperID);\n      this.GetQuestions(this.PaperID);\n    }\n    GetQuestions(paperId) {\n      this.questionService.getQuestionsForPaper(paperId).subscribe(quest => {\n        this.questions = quest;\n        console.log(quest[0]);\n        // console.log(this.questions);\n      }, err => console.log(\"Error in retreiving questions\"));\n    }\n    GetPaperDetails(paperId) {\n      this.paperService.getPaperDetails(paperId).subscribe(paper => {\n        this.paper = paper;\n        console.log(this.paper);\n      }, error => console.log(error));\n    }\n    static {\n      this.ɵfac = function QuestionListComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || QuestionListComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PaperService), i0.ɵɵdirectiveInject(i3.QuestionService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: QuestionListComponent,\n        selectors: [[\"app-question-list\"]],\n        decls: 8,\n        vars: 3,\n        consts: [[1, \"page\"], [1, \"page-title-bar\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [\"id\", \"accordionExample\", 1, \"accordion\"], [1, \"card\"], [1, \"card-header\"], [1, \"mb-0\"], [1, \"Qtext\"], [1, \"col-xs-2\"], [1, \"col-xs-10\"], [\"type\", \"button\", \"data-toggle\", \"collapse\", \"aria-expanded\", \"true\", \"aria-controls\", \"collapseOne\", 1, \"btn\", \"btn-link\"], [\"data-parent\", \"#accordionExample\", 1, \"collapse\"], [1, \"card-body\"], [3, \"paragraph\"]],\n        template: function QuestionListComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵtemplate(1, QuestionListComponent_Conditional_1_Template, 4, 4);\n            i0.ɵɵelementStart(2, \"div\", 1)(3, \"button\", 2);\n            i0.ɵɵtext(4, \"New Question\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(5, \"div\", 3);\n            i0.ɵɵrepeaterCreate(6, QuestionListComponent_For_7_Template, 14, 11, \"div\", 4, i0.ɵɵrepeaterTrackByIndex);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.paper ? 1 : -1);\n            i0.ɵɵadvance(2);\n            i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/newQuestion/\", ctx.PaperID, \"\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵrepeater(ctx.questions);\n          }\n        },\n        dependencies: [FormsModule, RouterLink],\n        styles: [\".question[_ngcontent-%COMP%]{font-size:1.2em}.answer[_ngcontent-%COMP%]{font-size:1.4em}.question-container[_ngcontent-%COMP%]{margin:50px 120px 120px}.heading[_ngcontent-%COMP%]{text-align:center}.right[_ngcontent-%COMP%]{text-align:end;margin-right:120px}.Qtext[_ngcontent-%COMP%]{padding:0;font-size:.5em;color:brown}.Qtext[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0}\"]\n      });\n    }\n  }\n  return QuestionListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}