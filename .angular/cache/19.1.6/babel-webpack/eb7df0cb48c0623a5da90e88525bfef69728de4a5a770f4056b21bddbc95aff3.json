{"ast":null,"code":"import { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nfunction LoginComponent_Conditional_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 8);\n    i0.ɵɵtext(1, \"Not a valid email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_Conditional_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 8);\n    i0.ɵɵtext(1, \"Not a valid password\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(userService, _router) {\n      this.userService = userService;\n      this._router = _router;\n      this.loginUserData = {};\n    }\n    ngOnInit() {\n      //throw new Error('Method not implemented.');\n      this.reactiveForm = new FormGroup({\n        email: new FormControl(null, [Validators.required, Validators.email]),\n        password: new FormControl(null, [Validators.required, Validators.minLength(4)])\n      });\n    }\n    Login() {\n      console.log(this.reactiveForm);\n      /*     this.userService.Login(this.loginUserData)\n          .subscribe(user=> {\n            //console.log(JSON.stringify(user));\n            localStorage.setItem('Token', user.Token);\n            localStorage.setItem('user', user);\n            this.userInformation = user;\n            this._router.navigate(['./dashboard'])\n      \n            //alert(\"Logged in\");\n          },\n          error => console.log(error)\n          ); */\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 21,\n        vars: 6,\n        consts: [[1, \"small-form\"], [1, \"small-form-title\"], [1, \"\", 3, \"formGroup\"], [1, \"small-form-body\"], [1, \"form-row\"], [1, \"form-group\", \"small-form-element\"], [\"for\", \"email\"], [\"name\", \"email\", \"id\", \"email\", \"placeholder\", \"Write Your Email\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"error\"], [\"for\", \"password\"], [\"name\", \"password\", \"id\", \"password\", \"type\", \"password\", \"placeholder\", \"Write Password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"button-row\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\", \"disabled\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h6\");\n            i0.ɵɵtext(3, \"login\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"form\", 2)(5, \"fieldset\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"label\", 6);\n            i0.ɵɵtext(9, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"input\", 7);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.loginUserData.email, $event) || (ctx.loginUserData.email = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(11, LoginComponent_Conditional_11_Template, 2, 0, \"small\", 8);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(12, \"div\", 4)(13, \"div\", 5)(14, \"label\", 9);\n            i0.ɵɵtext(15, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"input\", 10);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_16_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.loginUserData.password, $event) || (ctx.loginUserData.password = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(17, LoginComponent_Conditional_17_Template, 2, 0, \"small\", 8);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(18, \"div\", 11)(19, \"button\", 12);\n            i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_19_listener() {\n              return ctx.Login();\n            });\n            i0.ɵɵtext(20, \"Login\");\n            i0.ɵɵelementEnd()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"formGroup\", ctx.reactiveForm);\n            i0.ɵɵadvance(6);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.loginUserData.email);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.reactiveForm.get(\"email\").touched && ctx.reactiveForm.get(\"email\").invalid ? 11 : -1);\n            i0.ɵɵadvance(5);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.loginUserData.password);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.reactiveForm.get(\"password\").touched && ctx.reactiveForm.get(\"password\").invalid ? 17 : -1);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", ctx.reactiveForm.invalid);\n          }\n        },\n        dependencies: [ReactiveFormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n        encapsulation: 2\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}